---
import { getCurrentLocale, getTranslation } from '../utils/translations';
import SectionHead from './SectionHead.astro';

const locale = getCurrentLocale(Astro.url);
const t = getTranslation(locale);
---

<section id="contact">
  <div class="container">
    <SectionHead 
      title={t.contact.title}
      description={t.contact.description}
    />

    <form 
      id="contact-form" 
      method="POST" 
      data-success-message={t.contact.form.success_message}
      data-error-message={t.contact.form.error_message}
      data-sending-text={t.contact.form.sending}
      data-submit-text={t.contact.form.submit}
    >
      <input 
        type="text" 
        name="name" 
        placeholder={t.contact.form.name} 
        required
        minlength="2"
        maxlength="100"
      >
      <input 
        type="tel" 
        name="phone" 
        placeholder={t.contact.form.phone} 
        required
        minlength="7"
        maxlength="20"
      >
      <input 
        type="email" 
        name="email" 
        class="full" 
        placeholder={t.contact.form.email}
        maxlength="255"
      >
      <textarea 
        name="message" 
        class="full" 
        placeholder={t.contact.form.message}
        maxlength="1000"
      ></textarea>
      <div class="full">
        <button class="btn btn-primary" type="submit">{t.contact.form.submit}</button>
      </div>
    </form>
  </div>
</section>

<script>
  import { CHAT_ID } from "../utils/constants";
  import { formatContactMessage, sendTelegramMessage } from "../utils/telegram";

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');

    if (!form) return;

    const successMessage = form.getAttribute('data-success-message')!
    const errorMessage = form.getAttribute('data-error-message')!
    const sendingText = form.getAttribute('data-sending-text')!
    const submitText = form.getAttribute('data-submit-text')!

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const submitButton: any = form.querySelector('button[type="submit"]');

      if (!submitButton) return;

      try {
        submitButton.disabled = true;
        submitButton.textContent = sendingText

        const formData = new FormData(form as HTMLFormElement);

        const name = String(formData.get('name') || '');
        const phone = String(formData.get('phone') || '');
        const email = String(formData.get('email') || '');
        const message = String(formData.get('message') || '');

        const formattedMessage = formatContactMessage({
          name,
          phone,
          email,
          message,
        });

        const response = await sendTelegramMessage({
          chat_id: CHAT_ID,
          text: formattedMessage,
        });

        if (response) {
          showSuccessNotification(successMessage);

          (form as HTMLFormElement).reset();
        }

      } catch (error) {
        console.error('Form submission error:', error);
        showErrorNotification(errorMessage);
      } finally {
        const submitButton: any = form.querySelector('button[type="submit"]');

        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = submitText;
        }
      }
    });

    function showSuccessNotification(message: string) {
      showNotification(message, 'success');
    }

    function showErrorNotification(message: string) {
      showNotification(message, 'error');
    }

    function showNotification(message: string, type: 'success' | 'error') {
      const notification = document.createElement('div');

      notification.textContent = message;
      notification.className = `notification notification-${type}`;

      document.body.appendChild(notification);

      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 3000);
    }
  });
</script>