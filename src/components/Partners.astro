---
import { getCurrentLocale, getTranslation } from "../utils/translations";
import SectionHead from "./SectionHead.astro";

const locale = getCurrentLocale(Astro.url);
const t = getTranslation(locale);

const partners = [
  { name: "BVN", logo: "/partners/BVN_logo.svg" },
  { name: "Flexiva", logo: "/partners/flexiva_logo.svg" },
  {
    name: "Makroteknik Vektörel",
    logo: "/partners/makroteknik-vektörel_logo.svg",
  },
  { name: "改好", logo: "/partners/改好.svg" },
  { name: "Popula", logo: "/partners/popula_logo.svg" },
  { name: "无横线", logo: "/partners/logo(无横线)源文件.svg" },
  // { name: "Partner 7", logo: "/public/partners/partner7.png" },
];
---

<!-- FIXME: edit this logo sizes and some other bugs -->
<section id="partners" class="partners-section">
  <div class="container">
    <SectionHead title={t.partners.title} />

    <div class="partners-container">
      <div class="partners-track">
        <!-- First set of partners -->
        {
          partners.map((partner) => (
            <div class="partner-item">
              <img
                src={partner.logo}
                alt={partner.name}
                loading="lazy"
                width="160"
                height="80"
              />
            </div>
          ))
        }
        <!-- Duplicate for seamless loop -->
        {
          partners.map((partner) => (
            <div class="partner-item">
              <img
                src={partner.logo}
                alt={partner.name}
                loading="lazy"
                width="160"
                height="80"
              />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .logo-container {
    flex-shrink: 0;
    width: 160px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid red; /* Temporary border to see container */
    background: rgba(255, 0, 0, 0.1); /* Temporary background */
  }

  .logo-container img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    opacity: 0.8;
    transition: all 0.3s ease;
    border: 1px solid blue; /* Temporary border to see image */
  }
  .partners-section {
    padding: 60px 0;
    background: var(--muted);
    overflow: hidden;
  }

  .partners-container {
    position: relative;
    overflow: hidden;
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }

  .partners-track {
    display: flex;
    align-items: center;
    gap: 80px;
    animation: scroll-partners 30s linear infinite;
    width: max-content;
  }

  .partner-logo {
    flex-shrink: 0;
    width: 160px; /* Fixed width for all logos */
    height: 80px; /* Fixed height for all logos */
    object-fit: contain; /* Maintain aspect ratio */
    opacity: 0.8;
    transition: all 0.3s ease;
  }

  .partner-logo:hover {
    opacity: 1;
    transform: scale(1.05); /* Subtle scale effect on hover */
  }

  @keyframes scroll-partners {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-50% - 40px)); /* Half width + half gap */
    }
  }

  /* Pause animation on hover */
  .partners-container:hover .partners-track {
    animation-play-state: paused;
  }

  /* Responsive styles */
  @media (max-width: 980px) {
    .partners-track {
      gap: 60px;
      animation-duration: 25s;
    }

    .partner-logo {
      width: 140px;
      height: 70px;
    }
  }

  @media (max-width: 680px) {
    .partners-section {
      padding: 40px 0;
    }

    .partners-track {
      gap: 40px;
      animation-duration: 20s;
    }

    .partner-logo {
      width: 120px;
      height: 60px;
    }
  }

  @media (max-width: 480px) {
    .partners-track {
      gap: 30px;
    }

    .partner-logo {
      width: 100px;
      height: 50px;
    }
  }
</style>
